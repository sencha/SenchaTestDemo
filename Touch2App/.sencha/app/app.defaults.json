{
    /**
     * The relative path to the appliaction's markup file (html, jsp, asp, etc.)
     */
    "indexHtmlPath": "index.html",

    /**
     * List of all JavaScript assets in the right execution order.
     *
     * Each item is an object with the following format:
     *
     *      {
     *          // Path to file. If the file is local this must be a relative path from
     *          // this app.json file.
     *          //
     *          "path": "path/to/script.js",   // REQUIRED
     *
     *          // Set to true on one file to indicate that it should become the container
     *          // for the concatenated classes.
     *          //
     *          "bundle": false,    // OPTIONAL
     *
     *          // Set to true to include this file in the concatenated classes.
     *          //
     *          "includeInBundle": false,  // OPTIONAL
     *
     *          // Specify as true if this file is remote and should not be copied into the
     *          // build folder. Defaults to false for a local file which will be copied.
     *          //
     *          "remote": false,    // OPTIONAL
     *
     *          // If not specified, this file will only be loaded once, and cached inside
     *          // localStorage until this value is changed. You can specify:
     *          //
     *          //   - "delta" to enable over-the-air delta update for this file
     *          //   - "full" means full update will be made when this file changes
     *          //
     *          "update": "",        // OPTIONAL
     *
     *          // A value of true indicates that is a development mode only dependency.
     *          // These files will not be copied into the build directory or referenced
     *          // in the generate app.json manifest for the micro loader.
     *          //
     *          "bootstrap": false   // OPTIONAL
     *      }
     */
    "js": [
        {
            "path": "app.js",
            "bundle": true
        }
    ],

    /**
     * List of all CSS assets in the right inclusion order.
     *
     * Each item is an object with the following format:
     *
     *      {
     *          // Path to file. If the file is local this must be a relative path from
     *          // this app.json file.
     *          //
     *          "path": "path/to/stylesheet.css",   // REQUIRED
     *
     *          // Specify as true if this file is remote and should not be copied into the
     *          // build folder. Defaults to false for a local file which will be copied.
     *          //
     *          "remote": false,    // OPTIONAL
     *
     *          // If not specified, this file will only be loaded once, and cached inside
     *          // localStorage until this value is changed. You can specify:
     *          //
     *          //   - "delta" to enable over-the-air delta update for this file
     *          //   - "full" means full update will be made when this file changes
     *          //
     *          "update": ""      // OPTIONAL
     *      }
     */
    "css": [
        {
            "path": "bootstrap.css",
            "bootstrap": true
        }
    ],

    /**
     * Additional resources used during theme slicing operations
     */
    "slicer": {
        "js": [
            {
                "path": "${app.dir}/sass/example/custom.js",
                "isWidgetManifest": true
            }
        ]
    },

    /**
     * override objects for setting build environment specific
     * settings.
     */
    "production": {
    },

    "testing": {
    },

    "development": {
    },

    /**
     *  Controls the output directory for build resources.  May be set with
     *  either a string:
     *
     *      output: ""
     *
     *  or an object containing values for various types of
     *  build artifacts:
     *
     *      "output": {
     *          "base": "${workspace.build.dir}/${build.environment}/${app.name}",
     *          "page": {
     *              "path": "../index.html",
     *              "enable": false
     *          },
     *          "css": "${app.output.resources}/${app.name}-all.css",
     *          "js": {
     *              "path": "app.js",
     *              "enable": true,
     *              "optimize": {
     *                  "defines": true,
     *                  "callParent": true,
     *                  "requires": true,
     *               }
     *          },
     *          "microloader": {
     *              "path": "microloader.js",
     *              "embed": true,
     *              "enable": true
     *          },
     *          "manifest": {
     *              "path": "app.json",
     *              "embed": false,
     *              "enable": "${app.output.microloader.enable}"
     *          },
     *          "resources": "resources",
     *          "slicer": {
     *              "path": "${app.output.resources}/images",
     *              "enable": false
     *          }
     *      }
     *
     */
    "output": {
        "base": "${workspace.build.dir}/${build.environment}/${app.name}",
        "microloader": {
            "enable": true
        }
    },

    /**
     * This sets the default output folder for cordova packagers builds
     *
     *      // Cordova Packager Config options
     *      "config": {
     *
     *          // 'name' This is the name of your cordova application. This will default to your Sencha App name.
     *          // This is only used once during Cordova app creation and cannot be changed after.
     *          "name": "AppNameForCordova",
     *
     *          // 'id' This will be your package name for Android and your Bundle Identifier for iOS
     *          // This is only used once during Cordova app creation and cannot be changed after
     *          "id": "com.domain.AppName",
     *
     *          // 'platform' can be a platform or a space seperated list of platform (ios android)
     *          // platform supported on mac: ios, amazon-fireos, android, blackberry10, firefoxos
     *          // platform supported on win: wp7, wp8, windows8, amazon-fireos, android, blackberry10, firefoxos
     *          "platform": "ios"
     *
     *          // 'verbose' This boolean will determine if all cordova commands will have verbose output or not.
     *          // to properly see this run sencha command with the '-info' flag like the following
     *          // sencha -info app run [buildname]
     *
     *          // 'path' The path this builds cordova project should be created in.
     *          // This defaults to your {app.dir}/cordova
     *
     *          // 'target' This is the target for emulator/simulator commands.
     *          // On Android is the name of your Android Virtual Device
     *          // For iOS it is one of the following:
     *          // "iPhone (Retina 3.5-inch)"
     *          // "iPhone (Retina 4-inch)"
     *          // "iPhone"
     *          // "iPad"
     *          // "iPad (Retina)"
     *
     */
    "cordova": {
        "config": {
            "name": "${app.name}",
            "id": "com.domain.${app.name}",
            "verbose": false,
            "target": "",
            "path": "${app.dir}/cordova"
        },
        "js": [
            {
                "path": "cordova.js",
                "remote": true,
                "priority": 1000
            }
        ],
        "microloader": "${app.config.dir}/microloader/testing.js",
        "output": {
            "base": "${app.cordova.config.path}/www",
            "manifest": {
                "embed": true
            },
            "deltas": {
                "enable": false
            },
            "cache": {
                "enable": false
            }
        }
    },

    /**
     * This sets the default output folder for phonegap packagers builds
     *
     *      // Phonegap Packager Config options
     *      "config": {
     *
     *          // 'name' This is the name of your phonegap application. This will default to your Sencha App name.
     *          // This is only used once during Phonegap app creation and cannot be changed after.
     *          "name": "AppNameForCordova",
     *
     *          // 'id' This will be your package name for Android and your Bundle Identifier for iOS
     *          // This is only used once during Phonegap app creation and cannot be changed after
     *          "id": "com.domain.AppName",
     *
     *          // 'platform' a single platform to build, run or emulate
     *          // platform supported locally: android, ios, wp8, Blackberry 10
     *          // platform supported remotely: android, ios, wp8
     *          //"platform": "ios"
     *
     *          // 'remote' This boolean will determine if the build should be run on Phonegap's remove server 'http://build.phonegap.com'
     *          // setting remote to true will attempt to build on the cloud.
     *          // To properly use this one must set the following properties in there local.properties file (if this file does not exist create it in your app root)
     *          // phonegap.remote.username=myname@domain.com
     *          // phonegap.remote.password=mys3cr3tp@ssw0rd
     *
     *          // 'verbose' This boolean will determine if all phonegap commands will have verbose output or not.
     *          // to properly see this run sencha command with the '-info' flag like the following
     *          // sencha -info app run [buildname]
     *
     *          // 'path' The path this builds phonegap project should be created in.
     *          // This is only used once during Phonegap app creation if changed this will result in a new phonegap application being generated
     *          // This defaults to your {app.dir}/phonegap
     *
     */
    "phonegap": {
        "config": {
            "name": "${app.name}",
            "id": "com.domain.${app.name}",
            "remote": false,
            "verbose": false,
            "path": "${app.dir}/phonegap"
        },
        "js": [
            {
                "path": "phonegap.js",
                "remote": true,
                "priority": 1000
            }
        ],
        "microloader": "${app.config.dir}/microloader/testing.js",
        "output": {
            "base": "${app.phonegap.config.path}/www",
            "manifest": {
                "embed": true
            },
            "deltas": {
                "enable": false
            },
            "cache": {
                "enable": false
            }
        }
    },

    /**
     *  Controls the output structure of bootstrap artifacts.  May be specified by a string:
     *
     *  "bootstrap": "${app.dir}"
     *
     *  to adjust the base path for all bootstrap objects, or expanded into object form:
     *
     *  "bootstrap": {
     *      "base": "${app.dir},
     *      "manifest": "bootstrap.json",
     *      "microloader": "bootstrap.js",
     *      "css": "bootstrap.css"
     *  }
     *
     *
     */
    "bootstrap":{
        "base": "${app.dir}"
    }
}
